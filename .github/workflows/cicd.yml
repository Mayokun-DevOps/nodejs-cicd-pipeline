name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Run ESLint for code quality
        run: |
          npm install eslint --save-dev
          npx eslint .

  build-and-deploy:
    name: Build & Deploy to App Server
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies & Build app
        run: |
          npm install
          mkdir -p deploy
          tar -czf deploy/app.tar.gz .

      - name: Setup SSH Access
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.APP_SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Copy App to Remote Server
        run: |
          scp -i ~/.ssh/id_rsa deploy/app.tar.gz vagrant@${{ secrets.APP_SERVER_IP }}:/home/vagrant/

      - name: Remote Deploy (Docker Compose)
        run: |
          ssh -i ~/.ssh/id_rsa vagrant@${{ secrets.APP_SERVER_IP }} << 'EOF'
            cd /home/vagrant
            tar -xzf app.tar.gz -C app/
            cd app/
            docker compose up -d --build
          EOF
